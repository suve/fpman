.\" file autogenerated by fpman
.TH "fp-tcustomapplication" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TCustomApplication - Ancestor class for \fBTApplication\fR classes.
.SH LOCATION
package \fBfcl\fR, unit \fBCustApp\fR, file \fBcustapp.pp\fR, line 29
.SH SYNOPSIS
\fBtype\fR TCustomApplication = \fBclass (TComponent)\fR
.br
\fBpublic\fR
  \fBconstructor\fR Create; \fBoverride\fR;                 // Create a new instance of the \fBTCustomApplication\fR class
  \fBdestructor\fR Destroy; \fBoverride\fR;                 // Destroys the \fBTCustomApplication\fR instance.
  \fBprocedure\fR HandleException; \fBvirtual\fR;           // Handle an exception.
  \fBprocedure\fR Initialize; \fBvirtual\fR;                // Initialize the application
  \fBprocedure\fR Run;                                // Runs the application.
  \fBprocedure\fR ShowException; \fBvirtual\fR;             // Show an exception to the user
  \fBprocedure\fR Terminate; \fBvirtual\fR;                 // Terminate the application.
  \fBfunction\fR FindOptionIndex;                     // Return the index of an option.
  \fBfunction\fR GetOptionValue;                      // Return the value of a command-line option.
  \fBfunction\fR HasOption;                           // Check whether an option was specified.
  \fBfunction\fR CheckOptions;                        // Check whether all given options on the command-line are valid.
  \fBprocedure\fR GetEnvironmentList;                 // Return a list of environment variables.
  \fBprocedure\fR Log;                                // Write a message to the event log
  \fBproperty\fR ExeName: \fBstring\fR; [r]                 // Name of the executable.
  \fBproperty\fR HelpFile: \fBstring\fR; [rw]               // Location of the application help file.
  \fBproperty\fR Terminated: \fBBoolean\fR; [r]             // Was \fBTerminate\fR called or not
  \fBproperty\fR Title: \fBstring\fR; [rw]                  // Application title
  \fBproperty\fR OnException: \fBTExceptionEvent\fR; [rw]   // Exception handling event
  \fBproperty\fR ConsoleApplication: \fBBoolean\fR; [r]     // Is the application a console application or not
  \fBproperty\fR Location: \fBstring\fR; [r]                // Application location
  \fBproperty\fR Params: \fBstring\fR; [r]                  // Command-line parameters
  \fBproperty\fR ParamCount: \fBInteger\fR; [r]             // Number of command-line parameters
  \fBproperty\fR EnvironmentVariable: \fBstring\fR; [r]     // Environment variable access
  \fBproperty\fR OptionChar: \fBChar\fR; [rw]               // Command-line switch character
  \fBproperty\fR CaseSensitiveOptions: \fBBoolean\fR; [rw]  // Are options interpreted case sensitive or not
  \fBproperty\fR StopOnException: \fBBoolean\fR; [rw]       // Should the program loop stop on an exception
  \fBproperty\fR EventLogFilter: \fBTEventLogTypes\fR; [rw] // Event to filter events, before they are sent to the system log
.br
\fBend\fR;
.SH INHERITANCE
.TS
l l
l l
l l
l l.
\fBTCustomApplication\fR	Ancestor class for \fBTApplication\fR classes.
\fBTComponent\fR, \fBIUnknown\fR, \fBIInterfaceComponentReference\fR	
\fBTPersistent\fR, \fBIFPObserved\fR	
\fBTObject\fR	
.TE
.SH DESCRIPTION
\fBTCustomApplication\fR is the ancestor class for classes that whish to implement a global application class instance. It introduces several application-wide functionalities.


\fB\[bu]\fR Exception handling in HandleException, ShowException, OnException and StopOnException.

\fB\[bu]\fR Command-line parameter parsing in FindOptionIndex, GetOptionValue, CheckOptions and HasOption

\fB\[bu]\fR Environment variable handling in GetEnvironmentList and EnvironmentVariable.

Descendent classes need to override the \fBDoRun\fR protected method to implement the functionality of the program.


.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtcustomapplication.html\fR on 2015-04-21, 19:32.

