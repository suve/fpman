.\" file autogenerated by fpman
.TH "fp-tcustomapplication.handleexception" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TCustomApplication.HandleException - Handle an exception.
.SH LOCATION
package \fBfcl\fR, unit \fBCustApp\fR, file \fBcustapp.pp\fR, line 54
.SH SYNOPSIS
public procedure \fBTCustomApplication.HandleException\fR(Sender:TObject); \fBvirtual\fR;
.SH DESCRIPTION
\fBHandleException\fR is called (or can be called) to handle the exception \fBSender\fR. If the exception is not of class \fBException\fR then the default handling of exceptions in the \fBSysUtils\fR unit is called.

If the exception is of class \fBException\fR and the \fBOnException\fR handler is set, the handler is called with the exception object and \fBSender\fR argument.

If the \fBOnException\fR handler is not set, then the exception is passed to the \fBShowException\fR routine, which can be overridden by descendent application classes to show the exception in a way that is fit for the particular class of application. (a GUI application might show the exception in a message dialog.

When the exception is handled in the above manner, and the \fBStopOnException\fR property is set to \fBTrue\fR, the \fBTerminated\fR property is set to \fBTrue\fR, which will cause the \fBRun\fR loop to stop, and the application will exit.


.SH SEE ALSO
.TP
.B ShowException
Show an exception to the user
.TP
.B StopOnException
Should the program loop stop on an exception
.TP
.B Terminated
Was \fBTerminate\fR called or not
.TP
.B Run
Runs the application.

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtcustomapplication.handleexception.html\fR on 2015-04-09, 22:09.

