.\" file autogenerated by fpman
.TH "fp-tsqlconnection" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TSQLConnection - An abstract class representing a connection to a SQL Database
.SH LOCATION
package \fBfcl\fR, unit \fBsqldb\fR, file \fBsqldb.pp\fR, line 100
.SH SYNOPSIS
\fBtype\fR TSQLConnection = \fBclass (TDatabase)\fR
.br
\fBpublic\fR
  \fBproperty\fR Handle: \fBPointer\fR; [r]                   // Low level handle used by the connection.
  \fBproperty\fR FieldNameQuoteChars: \fBTQuoteChars\fR; [rw] // Characters used to quote field names.
  \fBconstructor\fR Create; \fBoverride\fR;                   // Create a new instance of \fBTSQLConnection\fR 
  \fBdestructor\fR Destroy; \fBoverride\fR;                   // Destroys the instance of the connection.
  \fBprocedure\fR StartTransaction; \fBoverride\fR;           // Start the Transaction associated with this Connection
  \fBprocedure\fR EndTransaction; \fBoverride\fR;             // End the Transaction associated with this connection
  \fBproperty\fR ConnOptions: \fBTConnOptions\fR; [r]         // The set of Connection options being used in the Connection
  \fBprocedure\fR ExecuteDirect;                        // Execute a piece of SQL code directly, using a Transaction if specified
  \fBprocedure\fR GetTableNames; \fBvirtual\fR;               // Get a list of the tables in the specified database
  \fBprocedure\fR GetProcedureNames; \fBvirtual\fR;           // Gets a list of Stored Procedures in the Database
  \fBprocedure\fR GetFieldNames; \fBvirtual\fR;               // Gets a list of the field names in the specified table
  \fBprocedure\fR GetSchemaNames; \fBvirtual\fR;              // Get database schema names
  \fBfunction\fR GetConnectionInfo; \fBvirtual\fR;            // Return some information about the connection
  \fBprocedure\fR CreateDB; \fBvirtual\fR;                    // Create a new Database on the server
  \fBprocedure\fR DropDB; \fBvirtual\fR;                      // Procedure to drop or remove a Database
.br
\fBpublished\fR
  \fBproperty\fR Password: \fBstring\fR; [rw]                 // Password used when authenticating on the database server
  \fBproperty\fR Transaction: \fBTSQLTransaction\fR; [rw]     // Default transaction to be used for this connection
  \fBproperty\fR UserName: \fBstring\fR; [rw]                 // The username for authentication on the database server
  \fBproperty\fR CharSet: \fBstring\fR; [rw]                  // The character set to be used in this database
  \fBproperty\fR HostName: \fBstring\fR; [rw]                 // The name of the host computer where the database resides
  \fBproperty\fR OnLog: \fBTDBLogNotifyEvent\fR; [rw]         // Event handler for logging events
  \fBproperty\fR LogEvents: \fBTDBEventTypes\fR; [rw]         // Filter for events to log
  \fBproperty\fR Connected: \fBBoolean\fR;                    // Is a connection to the server active or not
  \fBproperty\fR Role: \fBstring\fR; [rw]                     // Role in which the user is connecting to the database
  \fBproperty\fR DatabaseName: \fBstring\fR;                  // The name of the database to which connection is required.
  \fBproperty\fR KeepConnection: \fBBoolean\fR;               // Attempt to keep the connection open once it is established.
  \fBproperty\fR LoginPrompt: \fBBoolean\fR;                  // Should SQLDB prompt for user credentials when a connection is activated.
  \fBproperty\fR Params: \fBTStrings\fR;                      // Extra connection parameters
  \fBproperty\fR OnLogin: \fBTLoginEvent\fR;                  // Event handler for login process
.br
\fBend\fR;
.SH INHERITANCE
.TS
l l
l l
l l
l l
l l
l l.
\fBTSQLConnection\fR	An abstract class representing a connection to a SQL Database
\fBTDatabase\fR	Base class for connecting a FreePascal application to an external Database engine
\fBTCustomConnection\fR	Abstract class for connections to a server
\fBTComponent\fR, \fBIUnknown\fR, \fBIInterfaceComponentReference\fR	
\fBTPersistent\fR, \fBIFPObserved\fR	
\fBTObject\fR	
.TE
.SH DESCRIPTION
\fBTSQLConnection \fR is an abstract class for making a connection to a SQL Database. This class will never be instantiated directly, for each database type a descendent class specific for this database type must be created.

Most of common properties to SQL databases are implemented in this class.


.SH SEE ALSO
.TP
.B TSQLQuery
Class to handle SQL commands (with or without result set)
.TP
.B TSQLTransaction
Transaction in which a \fBTSQLQuery\fR is handled

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtsqlconnection.html\fR on 2015-04-21, 19:36.

