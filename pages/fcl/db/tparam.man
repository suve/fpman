.\" file autogenerated by fpman
.TH "fp-tparam" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TParam - Parameter description class
.SH LOCATION
package \fBfcl\fR, unit \fBdb\fR, file \fBdb.pas\fR, line 1124
.SH SYNOPSIS
\fBtype\fR TParam = \fBclass (TCollectionItem)\fR
.br
\fBpublic\fR
  \fBconstructor\fR Create;                     // Create a new parameter value
  \fBprocedure\fR Assign; \fBoverride\fR;             // Assign one parameter instance to another
  \fBprocedure\fR AssignField;                  // Copy value from field instance
  \fBprocedure\fR AssignToField;                // Assign parameter value to field
  \fBprocedure\fR AssignFieldValue;             // Assign field value to the parameter.
  \fBprocedure\fR AssignFromField;              // Copy field type and value
  \fBprocedure\fR Clear;                        // Clear the parameter value
  \fBprocedure\fR GetData;                      // Get the parameter value from a memory buffer
  \fBfunction\fR GetDataSize;                   // Return the size of the data.
  \fBprocedure\fR LoadFromFile;                 // Load a parameter value from file
  \fBprocedure\fR LoadFromStream;               // Load a parameter value from stream
  \fBprocedure\fR SetBlobData;                  // Set BLOB data
  \fBprocedure\fR SetData;                      // Set the parameter value from a buffer
  \fBproperty\fR AsBlob: \fBTBlobData\fR; [rw]        // Return parameter value as a blob
  \fBproperty\fR AsBoolean: \fBBoolean\fR; [rw]       // Get/Set parameter value as a boolean value
  \fBproperty\fR AsCurrency: \fBCurrency\fR; [rw]     // Get/Set parameter value as a currency value
  \fBproperty\fR AsDate: \fBTDateTime\fR; [rw]        // Get/Set parameter value as a date (TDateTime) value
  \fBproperty\fR AsDateTime: \fBTDateTime\fR; [rw]    // Get/Set parameter value as a date/time (TDateTime) value
  \fBproperty\fR AsFloat: \fBDouble\fR; [rw]          // Get/Set parameter value as a floating-point value
  \fBproperty\fR AsInteger: \fBLongInt\fR; [rw]       // Get/Set parameter value as an integer (32-bit) value
  \fBproperty\fR AsLargeInt: \fBLargeInt\fR; [rw]     // Get/Set parameter value as a 64-bit integer value
  \fBproperty\fR AsMemo: \fBstring\fR; [rw]           // Get/Set parameter value as a memo (string) value
  \fBproperty\fR AsSmallInt: \fBLongInt\fR; [rw]      // Get/Set parameter value as a smallint value
  \fBproperty\fR AsString: \fBstring\fR; [rw]         // Get/Set parameter value as a string value
  \fBproperty\fR AsTime: \fBTDateTime\fR; [rw]        // Get/Set parameter value as a time (TDateTime) value
  \fBproperty\fR AsWord: \fBLongInt\fR; [rw]          // Get/Set parameter value as a word value
  \fBproperty\fR AsFMTBCD: \fBTBCD\fR; [rw]           // Parameter value as a BCD value
  \fBproperty\fR Bound: \fBBoolean\fR; [rw]           // Is the parameter value bound (set to fixed value)
  \fBproperty\fR Dataset: \fBTDataSet\fR; [r]         // Dataset to which this parameter belongs
  \fBproperty\fR IsNull: \fBBoolean\fR; [r]           // Is the parameter empty
  \fBproperty\fR NativeStr: \fBstring\fR; [rw]        // No description available
  \fBproperty\fR Text: \fBstring\fR; [rw]             // Read or write the value of the parameter as a string
  \fBproperty\fR Value: \fBVariant\fR; [rws]          // Value as a variant
  \fBproperty\fR AsWideString: \fBWideString\fR; [rw] // Get/Set the value as a widestring
.br
\fBpublished\fR
  \fBproperty\fR DataType: \fBTFieldType\fR; [rw]     // Data type of the parameter
  \fBproperty\fR Name: \fBstring\fR; [rw]             // Name of the parameter
  \fBproperty\fR NumericScale: \fBInteger\fR; [rw]    // Numeric scale
  \fBproperty\fR ParamType: \fBTParamType\fR; [rw]    // Type of parameter
  \fBproperty\fR Precision: \fBInteger\fR; [rw]       // Precision of the BCD value
  \fBproperty\fR Size: \fBInteger\fR; [rw]            // Size of the parameter
.br
\fBend\fR;
.SH INHERITANCE
.TS
l l
l l
l l
l l.
\fBTParam\fR	Parameter description class
\fBTCollectionItem\fR	
\fBTPersistent\fR, \fBIFPObserved\fR	
\fBTObject\fR	
.TE
.SH DESCRIPTION
\fBTParam\fR is one item in a \fBTParams\fR collection. It describes the name (\fBTParam.Name\fR), type (\fBParamType\fR) and value (\fBTParam.Value\fR) of a parameter in a parametrized query or stored procedure. Under normal circumstances, it should never be necessary to create a \fBTParam\fR instance manually; the \fBTDataset\fR descendent that owns the parameters should have created all necessary \fBTParam\fR instances.


.SH SEE ALSO
.TP
.B TParams
A collection of parameter values for SQL-based datasets

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtparam.html\fR on 2015-04-21, 19:33.

