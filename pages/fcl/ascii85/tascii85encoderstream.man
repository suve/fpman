.\" file autogenerated by fpman
.TH "fp-tascii85encoderstream" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TASCII85EncoderStream - ASCII 85 encoding stream
.SH LOCATION
package \fBfcl\fR, unit \fBascii85\fR, file \fBascii85.pp\fR, line 76
.SH SYNOPSIS
\fBtype\fR TASCII85EncoderStream = \fBclass (TOwnerStream)\fR
.br
\fBpublic\fR
  \fBconstructor\fR Create;             // Create a new instance of \fBTASCII85EncoderStream\fR 
  \fBdestructor\fR Destroy; \fBoverride\fR;   // Flushed the data to the output stream and cleans up the encoder instance.
  \fBfunction\fR Write; \fBoverride\fR;       // Write data encoded to the destination stream
  \fBproperty\fR Width: \fBInteger\fR; [r]    // Width of the lines written to the data stream
  \fBproperty\fR Boundary: \fBBoolean\fR; [r] // Is a boundary delineator written before and after the data
.br
\fBend\fR;
.SH DESCRIPTION
\fBTASCII85EncoderStream\fR is the counterpart to the \fBTASCII85DecoderStream\fR decoder stream: what \fBTASCII85EncoderStream\fR encodes, can be decoded by \fBTASCII85DecoderStream\fR.

The encoder stream works using a destination stream: whatever data is written to the encoder stream is encoded and written to the destination stream. The stream must be passed on in the constructor.

Note that all encoded data is only written to the destination stream when the encoder stream is destroyed.


.SH SEE ALSO
.TP
.B TASCII85EncoderStream.create
Create a new instance of \fBTASCII85EncoderStream\fR 
.TP
.B TASCII85DecoderStream
ASCII 85 decoder stream.

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtascii85encoderstream.html\fR on 2015-04-09, 22:08.

