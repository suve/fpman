.\" file autogenerated by fpman
.TH "fp-tcriticalsection" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TCriticalSection - Critical section
.SH LOCATION
package \fBfcl\fR, unit \fBsyncobjs\fR, file \fBsyncobjs.pp\fR, line 38
.SH SYNOPSIS
\fBtype\fR TCriticalSection = \fBclass (TSynchroObject)\fR
.br
\fBpublic\fR
  \fBprocedure\fR Acquire; \fBoverride\fR;  // Enter the critical section
  \fBprocedure\fR Release; \fBoverride\fR;  // Leave the critical section
  \fBprocedure\fR Enter;              // Alias for \fBAcquire\fR 
  \fBfunction\fR TryEnter;            // Try and obtain the critical section
  \fBprocedure\fR Leave;              // Alias for \fBRelease\fR 
  \fBconstructor\fR Create;           // Create a new critical section.
  \fBdestructor\fR Destroy; \fBoverride\fR; // Destroy the criticalsection instance
.br
\fBend\fR;
.SH INHERITANCE
.TS
l l
l l
l l.
\fBTCriticalSection\fR	Critical section
\fBTSynchroObject\fR	Abstract synchronization object
\fBTObject\fR	
.TE
.SH DESCRIPTION
\fBTCriticalSection\fR is a class wrapper around the low-level \fBTRTLCriticalSection\fR routines. It simply calls the RTL routines in the system unit for critical section support.

A critical section is a resource which can be owned by only 1 caller: it can be used to make sure that in a multithreaded application only 1 thread enters pieces of code protected by the critical section.

Typical usage is to protect a piece of code with the following code (\fBMySection\fR is a \fBTCriticalSection\fR instance):


.SH SEE ALSO
.TP
.B Acquire
Enter the critical section
.TP
.B Release
Leave the critical section

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtcriticalsection.html\fR on 2015-04-21, 19:36.

