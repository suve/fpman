.\" file autogenerated by fpman
.TH "fp-tfpdatahashtable" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TFPDataHashTable - Hash table for data pointers
.SH LOCATION
package \fBfcl\fR, unit \fBcontnrs\fR, file \fBcontnrs.pp\fR, line 410
.SH SYNOPSIS
\fBtype\fR TFPDataHashTable = \fBclass (TFPCustomHashTable)\fR
.br
\fBpublic\fR
  \fBfunction\fR Iterate; \fBvirtual\fR;             // Iterate over the pointers in the hash table
  \fBprocedure\fR Add; \fBvirtual\fR;                // Add a data pointer to the list.
  \fBproperty\fR Items: \fBPointer\fR; \fBdefault\fR; [rw] // Key-based access to the items in the table
.br
\fBend\fR;
.SH INHERITANCE
.TS
l l
l l
l l.
\fBTFPDataHashTable\fR	Hash table for data pointers
\fBTFPCustomHashTable\fR	Hash class
\fBTObject\fR	
.TE
.SH DESCRIPTION
\fBTFPDataHashTable\fR is a \fBTFPCustomHashTable\fR descendent which stores simple data pointers together with the keys. In case the data associated with the keys are objects, it's better to use \fBTFPObjectHashTable\fR, or for string data, \fBTFPStringHashTable\fR is more suitable. The data pointers are exposed with their keys through the \fBItems\fR property.


.SH SEE ALSO
.TP
.B TFPObjectHashTable
Hash table for object instances
.TP
.B TFPStringHashTable
Hash table for string data.
.TP
.B Items
Key-based access to the items in the table

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtfpdatahashtable.html\fR on 2015-04-21, 19:32.

