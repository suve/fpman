.\" file autogenerated by fpman
.TH "fp-tfpobjectlist" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TFPObjectList - \fBTFPList\fR descendent which manages objects.
.SH LOCATION
package \fBfcl\fR, unit \fBcontnrs\fR, file \fBcontnrs.pp\fR, line 31
.SH SYNOPSIS
\fBtype\fR TFPObjectList = \fBclass (TObject)\fR
.br
\fBpublic\fR
  \fBconstructor\fR Create;                    // Create a new object list
  \fBdestructor\fR Destroy; \fBoverride\fR;          // Clears the list and destroys the list instance
  \fBprocedure\fR Clear;                       // Clear all elements in the list.
  \fBfunction\fR Add;                          // Add an object to the list.
  \fBprocedure\fR Delete;                      // Delete an element from the list.
  \fBprocedure\fR Exchange;                    // Exchange the location of two objects
  \fBfunction\fR Expand;                       // Expand the capacity of the list.
  \fBfunction\fR Extract;                      // Extract an object from the list
  \fBfunction\fR Remove;                       // Remove an item from the list.
  \fBfunction\fR IndexOf;                      // Search for an object in the list
  \fBfunction\fR FindInstanceOf;               // Search for an instance of a certain class
  \fBprocedure\fR Insert;                      // Insert a new object in the list
  \fBfunction\fR First;                        // Return the first non-nil object in the list
  \fBfunction\fR Last;                         // Return the last non-nil object in the list.
  \fBprocedure\fR Move;                        // Move an object to another location in the list.
  \fBprocedure\fR Assign;                      // Copy the contents of a list.
  \fBprocedure\fR Pack;                        // Remove all \fBNil\fR references from the list
  \fBprocedure\fR Sort;                        // Sort the list of objects
  \fBprocedure\fR ForEachCall;                 // For each object in the list, call a method or procedure, passing it the object.
  \fBproperty\fR Capacity: \fBInteger\fR; [rw]       // Capacity of the list
  \fBproperty\fR Count: \fBInteger\fR; [rw]          // Number of elements in the list.
  \fBproperty\fR OwnsObjects: \fBBoolean\fR; [rw]    // Should the list free elements when they are removed.
  \fBproperty\fR Items: \fBTObject\fR; \fBdefault\fR; [rw] // Indexed access to the elements of the list.
  \fBproperty\fR List: \fBTFPList\fR; [r]            // Internal list used to keep the objects.
.br
\fBend\fR;
.SH DESCRIPTION
\fBTFPObjectList\fR is a \fBTFPList\fR based list which has as the default array property \fBTObjects\fR instead of pointers. By default it also manages the objects: when an object is deleted or removed from the list, it is automatically freed. This behaviour can be disabled when the list is created.

In difference with \fBTObjectList\fR, \fBTFPObjectList\fR offers no notification mechanism of list operations, allowing it to be faster than \fBTObjectList\fR. For the same reason, it is also not a descendent of \fBTFPList\fR (although it uses one internally).


.SH SEE ALSO
.TP
.B #rtl.classes.TFPList
List to manage object instances.

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtfpobjectlist.html\fR on 2015-04-09, 22:08.

