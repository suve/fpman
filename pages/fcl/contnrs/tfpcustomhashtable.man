.\" file autogenerated by fpman
.TH "fp-tfpcustomhashtable" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TFPCustomHashTable - Hash class
.SH LOCATION
package \fBfcl\fR, unit \fBcontnrs\fR, file \fBcontnrs.pp\fR, line 352
.SH SYNOPSIS
\fBtype\fR TFPCustomHashTable = \fBclass (TObject)\fR
.br
\fBpublic\fR
  \fBconstructor\fR Create;                        // Instantiate a new \fBTFPCustomHashTable\fR instance using the default hash mechanism
  \fBconstructor\fR CreateWith;                    // Instantiate a new \fBTFPCustomHashTable\fR instance with given algorithm and size
  \fBdestructor\fR Destroy; \fBoverride\fR;              // Free the hash table.
  \fBprocedure\fR ChangeTableSize; \fBvirtual\fR;        // Change the table size of the hash table.
  \fBprocedure\fR Clear; \fBvirtual\fR;                  // Clear the hash table.
  \fBprocedure\fR Delete; \fBvirtual\fR;                 // Delete a key from the hash list.
  \fBfunction\fR Find;                             // Search for an item with a certain key value.
  \fBfunction\fR IsEmpty;                          // Check if the hash table is empty.
  \fBproperty\fR HashFunction: \fBTHashFunction\fR; [rw] // Hash function currently in use
  \fBproperty\fR Count: \fBLongWord\fR; [r]              // Number of items in the hash table.
  \fBproperty\fR HashTableSize: \fBLongWord\fR; [rw]     // Size of the hash table
  \fBproperty\fR HashTable: \fBTFPObjectList\fR; [r]     // Hash table instance
  \fBproperty\fR VoidSlots: \fBLongWord\fR; [r]          // Number of empty slots in the hash table.
  \fBproperty\fR LoadFactor: \fBDouble\fR; [r]           // Fraction of count versus size
  \fBproperty\fR AVGChainLen: \fBDouble\fR; [r]          // Average chain length
  \fBproperty\fR MaxChainLength: \fBLongWord\fR; [r]     // Maximum chain length
  \fBproperty\fR NumberOfCollisions: \fBLongWord\fR; [r] // Number of extra items
  \fBproperty\fR Density: \fBLongWord\fR; [r]            // Number of filled slots
.br
\fBend\fR;
.SH INHERITANCE
.TS
l l
l l.
\fBTFPCustomHashTable\fR	Hash class
\fBTObject\fR	
.TE
.SH DESCRIPTION
\fBTFPCustomHashTable\fR is a general-purpose hashing class. It can store string keys and pointers associated with these strings. The hash mechanism is configurable and can be optionally be specified when a new instance of the class is created; A default hash mechanism is implemented in \fBRSHash\fR.

A \fBTFPHasList\fR should be used when fast lookup of data based on some key is required. The other container objects only offer linear search methods, while the hash list offers faster search mechanisms.


.SH SEE ALSO
.TP
.B THTCustomNode
Single item in the hash table.
.TP
.B TFPObjectList
\fBTFPList\fR descendent which manages objects.
.TP
.B RSHash
Standard hash value calculating function.

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtfpcustomhashtable.html\fR on 2015-04-21, 19:32.

