.\" file autogenerated by fpman
.TH "fp-tipcservercomm" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TIPCServerComm - Internal message communication component
.SH LOCATION
package \fBfcl\fR, unit \fBsimpleipc\fR, file \fBsimpleipc.pp\fR, line 46
.SH SYNOPSIS
\fBtype\fR TIPCServerComm = \fBclass (TObject)\fR
.br
\fBpublic\fR
  \fBconstructor\fR Create; \fBvirtual\fR;              // Create a new instance of the communication handler
  \fBproperty\fR Owner: \fBTSimpleIPCServer\fR; [r]     // \fBTSimpleIPCServer\fR instance for which to handle transport
  \fBprocedure\fR StartServer; \fBvirtual\fR; \fBabstract\fR; // Start the server-side of the communication channel
  \fBprocedure\fR StopServer; \fBvirtual\fR; \fBabstract\fR;  // Stop the server side of the communication channel.
  \fBfunction\fR PeekMessage; \fBvirtual\fR; \fBabstract\fR;  // See if a message is available.
  \fBprocedure\fR ReadMessage; \fBvirtual\fR; \fBabstract\fR; // Read message from the channel.
  \fBproperty\fR InstanceID: \fBstring\fR; [r]          // Unique identifier for the communication channel.
.br
\fBend\fR;
.SH DESCRIPTION
\fBTIPCServerComm\fR is an abstract component which implements the server-side communication protocol. The behaviour expected of this class must be implemented in a platform-dependent descendent class.

The \fBTSimpleIPCServer\fR class does not implement the messaging protocol by itself. Instead, it creates an instance of a (platform dependent) descendent of \fBTIPCServerComm\fR which handles the internals of the commnication protocol.

The client side of the messaging protocol is handled by the \fBTIPCClientComm\fR component. The descenent components must always be implemented in pairs.


.SH SEE ALSO
.TP
.B TSimpleIPCServer
Simple IPC server component
.TP
.B TIPCClientComm
Internal client-side communication protocol

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtipcservercomm.html\fR on 2015-04-09, 22:12.

