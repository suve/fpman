.\" file autogenerated by fpman
.TH "fp-tideaencryptstream" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TIDEAEncryptStream - IDEA encryption stream.
.SH LOCATION
package \fBfcl\fR, unit \fBidea\fR, file \fBidea.pp\fR, line 93
.SH SYNOPSIS
\fBtype\fR TIDEAEncryptStream = \fBclass (TIDEAStream)\fR
.br
\fBpublic\fR
  \fBconstructor\fR Create; \fBoverload\fR; // Constructor to create a new \fBTIDEAEncryptStream\fR instance
  \fBdestructor\fR Destroy; \fBoverride\fR; // Flush data buffers and free the stream instance.
  \fBfunction\fR Write; \fBoverride\fR;     // Write bytes to the stream to be encrypted
  \fBfunction\fR Seek; \fBoverride\fR;      // Set stream position
  \fBprocedure\fR Flush;              // Write remaining bytes from the stream
.br
\fBend\fR;
.SH DESCRIPTION
\fBTIDEAEncryptStream\fR is a stream which encrypts anything that is written to it using the IDEA mechanism, and then writes the encrypted data to the destination stream using the \fBCipherIDEA\fR algorithm. It is a write-only stream: it is not possible to read data from this stream.

When creating a \fBTIDEAEncryptStream\fR instance, an IDEA encryption key should be passed to the constructor, as well as the stream to which encrypted data should be written.

The resulting encrypted data can be read again with a \fBTIDEADecryptStream\fR decryption stream.


.SH SEE ALSO
.TP
.B TIDEADecryptStream
IDEA Decryption stream.
.TP
.B TIDEAStream.Create
Creates a new instance of the \fBTIDEAStream\fR class
.TP
.B CipherIDEA
Encrypt or decrypt a buffer.

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtideaencryptstream.html\fR on 2015-04-09, 22:11.

