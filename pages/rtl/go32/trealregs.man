.\" file autogenerated by fpman
.TH "fp-trealregs" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
trealregs - Record describing all processor registers
.SH LOCATION
package \fBrtl\fR, unit \fBgo32\fR, file \fBgo32.pp\fR, line 62
.SH SYNOPSIS
\fBtype\fR trealregs = \fBrecord\fR
  \fBcase\fR Integer\fB of\fR


 1: \fBEDI\fR; // EDI register
  \fBcase\fR  ESI: \fBLongInt\fR;              // ESI register
  \fBcase\fR  EBP: \fBLongInt\fR;              // EBP register
  \fBcase\fR  Res: \fBLongInt\fR;              // RES register
  \fBcase\fR  EBX: \fBLongInt\fR;              // EBX register
  \fBcase\fR  EDX: \fBLongInt\fR;              // EDX register
  \fBcase\fR  ECX: \fBLongInt\fR;              // ECX register
  \fBcase\fR  EAX: \fBLongInt\fR;              // EAX register
  \fBcase\fR  Flags: \fBWord\fR;               // Flags register
  \fBcase\fR  ES: \fBWord\fR;                  // ES register
  \fBcase\fR  DS: \fBWord\fR;                  // DS register
  \fBcase\fR  FS: \fBWord\fR;                  // FS register
  \fBcase\fR  GS: \fBWord\fR;                  // GS register
  \fBcase\fR  IP: \fBWord\fR;                  // IP register
  \fBcase\fR  CS: \fBWord\fR;                  // CS register
  \fBcase\fR  SP: \fBWord\fR;                  // SP register
  \fBcase\fR  SS: \fBWord\fR;                  // SS register
  \fBcase\fR  ;
  \fBcase\fR  2: \fBDI\fR;                     // DI register
  \fBcase\fR  DI2: \fBWord\fR;                 // DI2 register
  \fBcase\fR  SI: \fBWord\fR;                  // SI register
  \fBcase\fR  SI2: \fBWord\fR;                 // SI2 register
  \fBcase\fR  BP: \fBWord\fR;                  // BP register
  \fBcase\fR  BP2: \fBWord\fR;                 // BP2 register
  \fBcase\fR  R1: \fBWord\fR;                  // R1 register
  \fBcase\fR  R2: \fBWord\fR;                  // R2 register
  \fBcase\fR  BX: \fBWord\fR;                  // BX register
  \fBcase\fR  BX2: \fBWord\fR;                 // BX2 register
  \fBcase\fR  DX: \fBWord\fR;                  // DX register
  \fBcase\fR  DX2: \fBWord\fR;                 // DX2 register
  \fBcase\fR  CX: \fBWord\fR;                  // CX register
  \fBcase\fR  CX2: \fBWord\fR;                 // CX2 register
  \fBcase\fR  AX: \fBWord\fR;                  // AX register
  \fBcase\fR  AX2: \fBWord\fR;                 // AX2 register
  \fBcase\fR  ;
  \fBcase\fR  3: \fBstuff\fR; \fBarray\fR;           // Pad data
  \fBcase\fR  BL: \fBByte\fR;                  // BL register
  \fBcase\fR  BH: \fBByte\fR;                  // BH register
  \fBcase\fR  BL2: \fBByte\fR;                 // BL2 register
  \fBcase\fR  BH2: \fBByte\fR;                 // BH2 register
  \fBcase\fR  DL: \fBByte\fR;                  // DL register
  \fBcase\fR  DH: \fBByte\fR;                  // DH register
  \fBcase\fR  DL2: \fBByte\fR;                 // DL2 register
  \fBcase\fR  DH2: \fBByte\fR;                 // DH register
  \fBcase\fR  CL: \fBByte\fR;                  // CL register
  \fBcase\fR  CH: \fBByte\fR;                  // CH register
  \fBcase\fR  CL2: \fBByte\fR;                 // CL2 register
  \fBcase\fR  CH2: \fBByte\fR;                 // CH2 register
  \fBcase\fR  AL: \fBByte\fR;                  // AL register
  \fBcase\fR  AH: \fBByte\fR;                  // AH register
  \fBcase\fR  AL2: \fBByte\fR;                 // AL2 register
  \fBcase\fR  AH2: \fBByte\fR;                 // AH2 register
  \fBcase\fR  ;
  \fBcase\fR  4: \fBRealEDI\fR;                // Real EDI register
  \fBcase\fR  RealESI: \fBLongInt\fR;          // Real ESI register
  \fBcase\fR  RealEBP: \fBLongInt\fR;          // Real EBP register
  \fBcase\fR  RealRES: \fBLongInt\fR;          // Real RES register
  \fBcase\fR  RealEBX: \fBLongInt\fR;          // Real EBX register
  \fBcase\fR  RealEDX: \fBLongInt\fR;          // Real EDX register
  \fBcase\fR  RealECX: \fBLongInt\fR;          // Real ECX register
  \fBcase\fR  RealEAX: \fBLongInt\fR;          // Real EAX register
  \fBcase\fR  RealFlags: \fBWord\fR;           // Real flags
  \fBcase\fR  RealES: \fBWord\fR;              // Real ES register
  \fBcase\fR  RealDS: \fBWord\fR;              // Real DS register
  \fBcase\fR  RealFS: \fBWord\fR;              // Real GS register
  \fBcase\fR  RealGS: \fBWord\fR;              // Real GS register
  \fBcase\fR  RealIP: \fBWord\fR;              // Real IP register
  \fBcase\fR  RealCS: \fBWord\fR;              // Real CS register
  \fBcase\fR  RealSP: \fBWord\fR;              // Real SP register
  \fBcase\fR  RealSS: \fBWord\fR;              // Real SS register
  \fBcase\fR  ;
.br
\fBend\fR;
.SH DESCRIPTION
The \fBtrealregs\fR type contains the data structure to pass register values to a interrupt handler or real mode callback.


.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtrealregs.html\fR on 2015-04-09, 21:59.

