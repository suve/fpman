.\" file autogenerated by fpman
.TH "fp-fpdup2" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
FpDup2 - Duplicate one filehandle to another
.SH LOCATION
package \fBrtl\fR, unit \fBBaseUnix\fR
.SH SYNOPSIS
function \fBFpDup2\fR(fildes:cint; fildes2:cint):cint;

function \fBFpDup2\fR(\fBvar\fR oldfile:text; \fBvar\fR newfile:text):cint;

function \fBFpDup2\fR(\fBvar\fR oldfile:file; \fBvar\fR newfile:file):cint;
.SH DESCRIPTION
Makes \fBfildes2\fR or \fBNewFile\fR an exact copy of \fBfildes\fR or \fBOldFile\fR, after having flushed the buffer of \fBOldFile\fR in the case of text or untyped files.

After a call to fdup2, the 2 file descriptors point to the same physical device (a file, socket, or a terminal).

\fBNewFile\fR can be an assigned file. If \fBnewfile\fR or \fBfildes\fR was open, it is closed first. Due to the buffering mechanism of Pascal, this has not the same functionality as the \fBdup2\fR call in C. The internal Pascal buffers are not the same after this call, but when the buffers are flushed (e.g. after output), the output is sent to the same file. Doing an lseek will, however, work as in C, i.e. doing a lseek will change the fileposition in both files.

The function returns the new file descriptor number, on error -1 is returned, and the error can be retrieved with \fBfpgeterrno\fR


.SH ERRORS
In case of error, the following error codes can be reported:

.TP
.B sys_ebadf
\fBOldFile\fR (or \fBfildes\fR) hasn't been assigned.
.TP
.B sys_emfile
Maximum number of open files for the process is reached.

.SH SEE ALSO
.TP
.B fpDup
Duplicate a file handle

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBfpdup2.html\fR on 2015-04-09, 21:57.

