.\" file autogenerated by fpman
.TH "fp-twriter" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TWriter - Object to write component data to an arbitrary format.
.SH LOCATION
package \fBrtl\fR, unit \fBClasses\fR, file \fBclassesh.inc\fR, line 1407
.SH SYNOPSIS
\fBtype\fR TWriter = \fBclass (TFiler)\fR
.br
\fBpublic\fR
  \fBconstructor\fR Create;                                                 // Creates a new Writer with a stream and bufsize.
  \fBdestructor\fR Destroy; \fBoverride\fR;                                       // Destroys the writer instance.
  \fBprocedure\fR DefineProperty; \fBoverride\fR;                                 // Callback used when defining and streaming custom properties.
  \fBprocedure\fR DefineBinaryProperty; \fBoverride\fR;                           // Callback used when defining and streaming custom properties.
  \fBprocedure\fR Write; \fBvirtual\fR;                                           // Write raw data to stream
  \fBprocedure\fR WriteBoolean;                                             // Write boolean value to the stream.
  \fBprocedure\fR WriteCollection;                                          // Write a collection to the stream.
  \fBprocedure\fR WriteComponent;                                           // Stream a component to the stream.
  \fBprocedure\fR WriteChar;                                                // Write a character to the stream.
  \fBprocedure\fR WriteWideChar;                                            // Write widechar to stream
  \fBprocedure\fR WriteDescendent;                                          // Write a descendent component to the stream.
  \fBprocedure\fR WriteFloat;                                               // Write a float to the stream.
  \fBprocedure\fR WriteSingle;                                              // Write a single-type real to the stream.
  \fBprocedure\fR WriteDate;                                                // Write a date to the stream.
  \fBprocedure\fR WriteCurrency;                                            // Write a currency value to the stream
  \fBprocedure\fR WriteIdent;                                               // Write an identifier to the stream.
  \fBprocedure\fR WriteInteger;                                             // Write an integer to the stream.
  \fBprocedure\fR WriteSet;                                                 // Write a set value to the stream
  \fBprocedure\fR WriteListBegin;                                           // Write a start-of-list marker to the stream.
  \fBprocedure\fR WriteListEnd;                                             // Write an end-of-list marker to the stream.
  \fBprocedure\fR WriteRootComponent;                                       // Write a root component to the stream.
  \fBprocedure\fR WriteString;                                              // Write a string to the stream.
  \fBprocedure\fR WriteWideString;                                          // Write a widestring value to the stream
  \fBprocedure\fR WriteUnicodeString;                                       // Write a unicode string to the stream.
  \fBprocedure\fR WriteVariant;                                             // Write a variant to the stream
  \fBproperty\fR RootAncestor: \fBTComponent\fR; [rw]                             // Ancestor of root component.
  \fBproperty\fR OnFindAncestor: \fBTFindAncestorEvent\fR; [rw]                   // Event occurring when an ancestor component must be found.
  \fBproperty\fR OnWriteMethodProperty: \fBTWriteMethodPropertyEvent\fR; [rw]     // Handler from writing method properties.
  \fBproperty\fR OnWriteStringProperty: \fBTReadWriteStringPropertyEvent\fR; [rw] // Event handler for translating strings written to stream.
  \fBproperty\fR Driver: \fBTAbstractObjectWriter\fR; [r]                         // Driver used when writing to the stream.
  \fBproperty\fR PropertyPath: \fBstring\fR; [r]                                  // Path to the property that is currently being written
.br
\fBend\fR;
.SH INHERITANCE
.TS
l l
l l
l l.
\fBTWriter\fR	Object to write component data to an arbitrary format.
\fBTFiler\fR	Class responsible for streaming of components.
\fBTObject\fR	Base class of all classes.
.TE
.SH DESCRIPTION
The \fBTWriter\fR class is a writer class that implements generic component streaming capabilities, independent of the format of the data in the stream. It uses a driver class \fBTAbstractObjectWriter\fR to do the actual reading of data. The interface of the \fBTWriter\fR class should be identical to the interface in Delphi.

Note that the \fBTWriter\fR design is such that it will write a single component to a stream. It will write all children of this component, but it is not designed to write multiple components in succession to one stream.

It should never be necessary to create an instance of this class directly. Instead, the \fBTStream.WriteComponent\fR call should be used.


.SH SEE ALSO
.TP
.B TFiler
Class responsible for streaming of components.
.TP
.B TWriter
Object to write component data to an arbitrary format.
.TP
.B TAbstractObjectReader
Abstract driver class to read stored component data.

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtwriter.html\fR on 2015-04-21, 19:19.

