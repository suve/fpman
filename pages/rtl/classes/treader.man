.\" file autogenerated by fpman
.TH "fp-treader" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TReader - Generic reader object which reads component data from any given source.
.SH LOCATION
package \fBrtl\fR, unit \fBClasses\fR, file \fBclassesh.inc\fR, line 1212
.SH SYNOPSIS
\fBtype\fR TReader = \fBclass (TFiler)\fR
.br
\fBpublic\fR
  \fBconstructor\fR Create;                                                // Creates a new reader class
  \fBdestructor\fR Destroy; \fBoverride\fR;                                      // Destroys a reader class.
  \fBprocedure\fR BeginReferences;                                         // Initializes the component referencing mechanism.
  \fBprocedure\fR CheckValue;                                              // Raises an exception if the next value in the stream is not of type \fBValue\fR 
  \fBprocedure\fR DefineProperty; \fBoverride\fR;                                // Reads a user-defined property from the stream.
  \fBprocedure\fR DefineBinaryProperty; \fBoverride\fR;                          // Reads a user-defined binary property from the stream.
  \fBfunction\fR EndOfList;                                                // Returns true if the stream contains an end-of-list marker.
  \fBprocedure\fR EndReferences;                                           // Finalizes the component referencing mechanism.
  \fBprocedure\fR FixupReferences;                                         // Tries to resolve all unresolved component references.
  \fBfunction\fR NextValue;                                                // Returns the type of the next value.
  \fBprocedure\fR Read; \fBvirtual\fR;                                           // Read raw data from stream
  \fBfunction\fR ReadBoolean;                                              // Reads a boolean from the stream.
  \fBfunction\fR ReadChar;                                                 // Reads a character from the stream.
  \fBfunction\fR ReadWideChar;                                             // Read widechar from the stream
  \fBfunction\fR ReadUnicodeChar;                                          // Read unicode character
  \fBprocedure\fR ReadCollection;                                          // Reads a collection from the stream.
  \fBfunction\fR ReadComponent;                                            // Starts reading a component from the stream.
  \fBprocedure\fR ReadComponents;                                          // Starts reading child components from the stream.
  \fBfunction\fR ReadFloat;                                                // Reads a float from the stream.
  \fBfunction\fR ReadSingle;                                               // Reads a single-type real from the stream.
  \fBfunction\fR ReadDate;                                                 // Reads a date from the stream
  \fBfunction\fR ReadCurrency;                                             // Read a currency value from the stream.
  \fBfunction\fR ReadIdent;                                                // Reads an identifier from the stream.
  \fBfunction\fR ReadInteger;                                              // Reads an integer from the stream
  \fBfunction\fR ReadInt64;                                                // Reads a 64-bit integer from the stream.
  \fBfunction\fR ReadSet;                                                  // Read a set value from the stream
  \fBprocedure\fR ReadListBegin;                                           // Checks for the beginning of a list.
  \fBprocedure\fR ReadListEnd;                                             // Checks for the end of a list.
  \fBfunction\fR ReadRootComponent;                                        // Starts reading a root component.
  \fBfunction\fR ReadVariant;                                              // Read a variant from the stream
  \fBfunction\fR ReadString;                                               // Reads a string from the stream.
  \fBfunction\fR ReadWideString;                                           // Read a WideString value from the stream.
  \fBfunction\fR ReadUnicodeString;                                        // Read a UnicodeString value from the stream
  \fBfunction\fR ReadValue;                                                // Reads the next value type from the stream.
  \fBprocedure\fR CopyValue;                                               // Copy a value to a writer.
  \fBproperty\fR Driver: \fBTAbstractObjectReader\fR; [r]                        // The driver in use for streaming the data.
  \fBproperty\fR Owner: \fBTComponent\fR; [rw]                                   // Owner of the component being read
  \fBproperty\fR Parent: \fBTComponent\fR; [rw]                                  // Parent of the component being read.
  \fBproperty\fR OnError: \fBTReaderError\fR; [rw]                               // Handler called when an error occurs.
  \fBproperty\fR OnPropertyNotFound: \fBTPropertyNotFoundEvent\fR; [rw]          // Handler for treating missing properties.
  \fBproperty\fR OnFindMethod: \fBTFindMethodEvent\fR; [rw]                      // Handler to find or change a method address.
  \fBproperty\fR OnSetMethodProperty: \fBTSetMethodPropertyEvent\fR; [rw]        // Handler for setting method properties.
  \fBproperty\fR OnSetName: \fBTSetNameEvent\fR; [rw]                            // Handler called when setting a component name.
  \fBproperty\fR OnReferenceName: \fBTReferenceNameEvent\fR; [rw]                // Handler called when another component is referenced.
  \fBproperty\fR OnAncestorNotFound: \fBTAncestorNotFoundEvent\fR; [rw]          // Handler called when the ancestor component cannot be found.
  \fBproperty\fR OnCreateComponent: \fBTCreateComponentEvent\fR; [rw]            // Handler called when a component needs to be created.
  \fBproperty\fR OnFindComponentClass: \fBTFindComponentClassEvent\fR; [rw]      // Handler called when a component class reference needs to be found.
  \fBproperty\fR OnReadStringProperty: \fBTReadWriteStringPropertyEvent\fR; [rw] // Handler for translating strings when read from the stream.
.br
\fBend\fR;
.SH INHERITANCE
.TS
l l
l l
l l.
\fBTReader\fR	Generic reader object which reads component data from any given source.
\fBTFiler\fR	Class responsible for streaming of components.
\fBTObject\fR	Base class of all classes.
.TE
.SH DESCRIPTION
The \fBTReader\fR class is a reader class that implements generic component streaming capabilities, independent of the format of the data in the stream. It uses a driver class \fBTAbstractObjectReader\fR to do the actual reading of data. The interface of the \fBTReader\fR class should be identical to the interface in Delphi.

Note that the \fBTReader\fR design is such that it can read a single component from a stream. It will read all children of this component, but it is not designed to read multiple components in succession from one stream.

It should never be necessary to create an instance of this class directly. Instead, the \fBTStream.ReadComponent\fR call should be used.


.SH SEE ALSO
.TP
.B TFiler
Class responsible for streaming of components.
.TP
.B TWriter
Object to write component data to an arbitrary format.
.TP
.B TAbstractObjectReader
Abstract driver class to read stored component data.

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtreader.html\fR on 2015-04-21, 19:19.

