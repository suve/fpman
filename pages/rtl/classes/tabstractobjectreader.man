.\" file autogenerated by fpman
.TH "fp-tabstractobjectreader" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TAbstractObjectReader - Abstract driver class to read stored component data.
.SH LOCATION
package \fBrtl\fR, unit \fBClasses\fR, file \fBclassesh.inc\fR, line 1099
.SH SYNOPSIS
\fBtype\fR TAbstractObjectReader = \fBclass\fR
.br
\fBpublic\fR
  \fBfunction\fR NextValue; \fBvirtual\fR; \fBabstract\fR;           // Returns the type of the next value in the stream.
  \fBfunction\fR ReadValue; \fBvirtual\fR; \fBabstract\fR;           // Reads the type of the next value.
  \fBprocedure\fR BeginRootComponent; \fBvirtual\fR; \fBabstract\fR; // Starts the reading of the root component.
  \fBprocedure\fR BeginComponent; \fBvirtual\fR; \fBabstract\fR;     // Marks the reading of a new component.
  \fBfunction\fR BeginProperty; \fBvirtual\fR; \fBabstract\fR;       // Marks the reading of a property value.
  \fBprocedure\fR Read; \fBvirtual\fR; \fBabstract\fR;               // Read raw data from stream
  \fBprocedure\fR ReadBinary; \fBvirtual\fR; \fBabstract\fR;         // Read binary data from the stream.
  \fBfunction\fR ReadFloat; \fBvirtual\fR; \fBabstract\fR;           // Read a float value from the stream.
  \fBfunction\fR ReadSingle; \fBvirtual\fR; \fBabstract\fR;          // Read a single (real-type) value from the stream.
  \fBfunction\fR ReadDate; \fBvirtual\fR; \fBabstract\fR;            // Read a date value from the stream.
  \fBfunction\fR ReadCurrency; \fBvirtual\fR; \fBabstract\fR;        // Read a currency value from the stream.
  \fBfunction\fR ReadIdent; \fBvirtual\fR; \fBabstract\fR;           // Read an identifier from the stream.
  \fBfunction\fR ReadInt8; \fBvirtual\fR; \fBabstract\fR;            // Read an 8-bit integer from the stream.
  \fBfunction\fR ReadInt16; \fBvirtual\fR; \fBabstract\fR;           // Read a 16-bit integer from the stream.
  \fBfunction\fR ReadInt32; \fBvirtual\fR; \fBabstract\fR;           // Read a 32-bit integer from the stream.
  \fBfunction\fR ReadInt64; \fBvirtual\fR; \fBabstract\fR;           // Read a 64-bit integer from the stream.
  \fBfunction\fR ReadSet; \fBvirtual\fR; \fBabstract\fR;             // Reads a set from the stream.
  \fBfunction\fR ReadStr; \fBvirtual\fR; \fBabstract\fR;             // Read a shortstring from the stream
  \fBfunction\fR ReadString; \fBvirtual\fR; \fBabstract\fR;          // Read a string of type \fBStringType\fR from the stream.
  \fBfunction\fR ReadWideString; \fBvirtual\fR; \fBabstract\fR;      // Read a widestring value from the stream.
  \fBfunction\fR ReadUnicodeString; \fBvirtual\fR; \fBabstract\fR;   // Read a unicode string value
  \fBprocedure\fR SkipComponent; \fBvirtual\fR; \fBabstract\fR;      // Skip till the end of the component.
  \fBprocedure\fR SkipValue; \fBvirtual\fR; \fBabstract\fR;          // Skip the current value.
.br
\fBend\fR;
.SH DESCRIPTION
The Free Pascal streaming mechanism, while compatible with Delphi's mechanism, differs from it in the sense that the streaming mechanism uses a driver class when streaming components. The \fBTAbstractObjectReader\fR class is the base driver class for reading property values from streams. It consists entirely of abstract methods, which must be implemented by descendent classes.

Different streaming mechanisms can be implemented by making a descendent from \fBTAbstractObjectReader\fR. The \fBTBinaryObjectReader\fR class is such a descendent class, which streams data in binary (Delphi compatible) format.

All methods described in this class, mustbe implemented by descendent classes.


.SH SEE ALSO
.TP
.B TBinaryObjectReader
Driver class descendent which reads component data stored in binary format.

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtabstractobjectreader.html\fR on 2015-04-09, 21:57.

