.\" file autogenerated by fpman
.TH "fp-tthread" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TThread - Abstract Thread class.
.SH LOCATION
package \fBrtl\fR, unit \fBClasses\fR, file \fBclassesh.inc\fR, line 1549
.SH SYNOPSIS
\fBtype\fR TThread = \fBclass\fR
.br
\fBprotected\fR
  \fBprocedure\fR Execute; \fBvirtual\fR; \fBabstract\fR;    // Execute method. Must be overridden in a descendent thread.
.br
\fBpublic\fR
  \fBconstructor\fR Create;                      // Creates a new thread.
  \fBdestructor\fR Destroy; \fBoverride\fR;            // Destroys the thread object.
  \fBprocedure\fR AfterConstruction; \fBoverride\fR;   // Code to be executed after construction but before execute.
  \fBprocedure\fR Start;                         // Starts a thread thread that was created in a suspended state.
  \fBprocedure\fR Resume; \fBdeprecated\fR;            // Resumes the thread's execution. Deprecated, see \fBTThread.Start\fR 
  \fBprocedure\fR Suspend; \fBdeprecated\fR;           // Suspends the thread's execution.
  \fBprocedure\fR Terminate;                     // Signals the thread it should terminate.
  \fBfunction\fR WaitFor;                        // Waits for the thread to terminate and returns the exit status.
  \fBproperty\fR FreeOnTerminate: \fBBoolean\fR; [rw]  // Indicates whether the thread should free itself when it stops executing.
  \fBproperty\fR Handle: \fBTThreadID\fR; [r]          // Returns the thread handle.
  \fBproperty\fR Priority: \fBTThreadPriority\fR; [rw] // Returns the thread priority.
  \fBproperty\fR Suspended: \fBBoolean\fR; [rw]        // Indicates whether the thread is suspended.
  \fBproperty\fR ThreadID: \fBTThreadID\fR; [r]        // Returns the thread ID.
  \fBproperty\fR OnTerminate: \fBTNotifyEvent\fR; [rw] // Event called when the thread terminates.
  \fBproperty\fR FatalException: \fBTObject\fR; [r]    // Exception that occured during thread execution
.br
\fBend\fR;
.SH INHERITANCE
.TS
l l
l l.
\fBTThread\fR	Abstract Thread class.
\fBTObject\fR	
.TE
.SH DESCRIPTION
The \fBTThread\fR class encapsulates the native thread support of the operating system. To create a thread, declare a descendent of the \fBTThread\fR object and override the \fBExecute\fR method. In this method, the tthread's code should be executed. To run a thread, create an instance of the tthread descendent, and call it's execute method.


.SH SEE ALSO
.TP
.B EThread
Thread error exception.
.TP
.B TThread.Execute
Execute method. Must be overridden in a descendent thread.

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtthread.html\fR on 2015-04-21, 19:19.

