.\" file autogenerated by fpman
.TH "fp-ttypedata" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TTypeData - Class properties type data record.
.SH LOCATION
package \fBrtl\fR, unit \fBtypinfo\fR, file \fBtypinfo.pp\fR, line 124
.SH SYNOPSIS
\fBtype\fR TTypeData = \fBpacked record\fR
  \fBcase\fR TTypeKind\fB of\fR


 tkUnKnown;
  \fBcase\fR  ;
  \fBcase\fR  tkInteger;
  \fBcase\fR  OrdType: \fBTOrdType\fR;                                        // Type is an ordinal type
  \fBcase\fR  \fBcase \fRTTypeKind\fB of\fR


 tkInteger;
  \fBcase\fR  MinValue: \fBLongInt\fR;                                        // Minimum value for the (subrange) type.
  \fBcase\fR  MaxValue: \fBLongInt\fR;                                        // Maxmimum value for the (subrange) type.
  \fBcase\fR  \fBcase \fRTTypeKind\fB of\fR


 tkEnumeration: \fBBaseType\fR; // Base type on which this type is based.
  \fBcase\fR  NameList: \fBShortString\fR;                                    // List of names for an enumerated type
  \fBcase\fR  ;
  \fBcase\fR  ;
  \fBcase\fR  tkSet: \fBCompType\fR;                                          // Comp type
  \fBcase\fR  ;
  \fBcase\fR  ;
  \fBcase\fR  tkFloat: \fBFloatType\fR;                                       // Float type
  \fBcase\fR  ;
  \fBcase\fR  tkSString: \fBMaxLength\fR;                                     // Maximum length (for a shortstring type)
  \fBcase\fR  ;
  \fBcase\fR  tkClass: \fBClassType\fR;                                       // Class type
  \fBcase\fR  ParentInfo: \fBPTypeInfo\fR;                                    // Parent class type info
  \fBcase\fR  PropCount: \fBSmallInt\fR;                                      // Property count for class type
  \fBcase\fR  UnitName: \fBShortString\fR;                                    // Unit name in which type is defined.
  \fBcase\fR  ;
  \fBcase\fR  tkHelper: \fBHelperParent\fR;                                   // Type information for parent helper class
  \fBcase\fR  ExtendedInfo: \fBPTypeInfo\fR;                                  // Type information for the extended type (record or class).
  \fBcase\fR  HelperProps: \fBSmallInt\fR;                                    // Number of properties provided by the helper.
  \fBcase\fR  HelperUnit: \fBShortString\fR;                                  // Unit the helper class is defined in.
  \fBcase\fR  ;
  \fBcase\fR  tkMethod: \fBMethodKind\fR;                                     // Kind of method
  \fBcase\fR  ParamCount: \fBByte\fR;                                         // Method parameter count
  \fBcase\fR  ParamList: \fB\\fBarray\\fR\fR;                                 // Type data for parameters
  \fBcase\fR  ;
  \fBcase\fR  tkInt64: \fBMinInt64Value\fR;                                   // Minimum Int64 value for subrange type.
  \fBcase\fR  MaxInt64Value: \fBInt64\fR;                                     // Maximum int64 value for subrange type.
  \fBcase\fR  ;
  \fBcase\fR  tkQWord: \fBMinQWordValue\fR;                                   // Minimum QWord value for a subrange type.
  \fBcase\fR  MaxQWordValue: \fBQWord\fR;                                     // Maximum QWord value for a subrange type.
  \fBcase\fR  ;
  \fBcase\fR  tkInterface: \fBIntfParent\fR;                                  // Parent interface type data.
  \fBcase\fR  IntfFlags: \fBTIntfFlagsBase\fR;                                // Interface flags
  \fBcase\fR  GUID: \fBTGuid\fR;                                              // GUID identification for interface
  \fBcase\fR  IntfUnit: \fBShortString\fR;                                    // Interface unit.
  \fBcase\fR  ;
  \fBcase\fR  tkInterfaceRaw: \fBRawIntfParent\fR;                            // Raw interface parent.
  \fBcase\fR  RawIntfFlags: \fBTIntfFlagsBase\fR;                             // Raw interface parent flags.
  \fBcase\fR  IID: \fBTGuid\fR;                                               // GUID identifying raw interface.
  \fBcase\fR  RawIntfUnit: \fBShortString\fR;                                 // Raw interface unit.
  \fBcase\fR  IIDStr: \fBShortString\fR;                                      // IID string representation of interface
  \fBcase\fR  ;
  \fBcase\fR  tkDynArray: \fBelSize\fR;                                       // Dynamical array element size
  \fBcase\fR  elType2: \fBPPTypeInfo\fR;                                      // Dynamical array Element type
  \fBcase\fR  varType: \fBLongInt\fR;                                         // Dynamical array element type
  \fBcase\fR  elType: \fBPPTypeInfo\fR;                                       // Dynamical array Element type
  \fBcase\fR  DynUnitName: \fBShortStringBase\fR;                             // Unit name
  \fBcase\fR  ;
.br
\fBend\fR;
.SH DESCRIPTION
If the typeinfo kind is \fBtkClass\fR, then the property information follows the \fBUnitName\fR string, as an array of \fBTPropInfo\fR records.


.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBttypedata.html\fR on 2015-04-09, 22:07.

