.\" file autogenerated by fpman
.TH "fp-select" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
Select - Wait for events on file descriptors
.SH LOCATION
package \fBrtl\fR, unit \fBoldlinux\fR
.SH SYNOPSIS
function \fBSelect\fR(N:LongInt; readfds:pfdset; writefds:pfdset; exceptfds:pfdset; TimeOut:ptimeval):LongInt;

function \fBSelect\fR(N:LongInt; readfds:pfdset; writefds:pfdset; exceptfds:pfdset; TimeOut:LongInt):LongInt;
.SH DESCRIPTION
\fBSelect\fR checks one of the file descriptors in the \fBFDSets\fR to see if its status changed.

\fBreadfds, writefds\fR and \fBexceptfds\fR are pointers to arrays of 256 bits. If you want a file descriptor to be checked, you set the corresponding element in the array to 1. The other elements in the array must be set to zero. Three arrays are passed : The entries in \fBreadfds\fR are checked to see if characters become available for reading. The entries in \fBwritefds\fR are checked to see if it is OK to write to them, while entries in \fBexceptfds\fR are cheked to see if an exception occorred on them.

You can use the functions \fBFD_ZERO\fR\fBFD_Clr\fR, \fBFD_Set\fR or \fBFD_IsSet\fR to manipulate the individual elements of a set.

The pointers can be \fBNil\fR.

\fBN\fR is the largest index of a nonzero entry plus 1. (= the largest file-descriptor + 1).

\fBTimeOut\fR can be used to set a time limit. If \fBTimeOut\fR can be two types :


\fB1.\fR \fBTimeOut\fR is of type \fBPTime\fR and contains a zero time, the call returns immediately. If \fBTimeOut\fR is \fBNil\fR, the kernel will wait forever, or until a status changed.

\fB2.\fR \fBTimeOut\fR is of type \fBLongint\fR. If it is -1, this has the same effect as a \fBTimeout\fR of type \fBPTime\fR which is \fBNil\fR. Otherwise, \fBTimeOut\fR contains a time in milliseconds.

When the TimeOut is reached, or one of the file descriptors has changed, the \fBSelect\fR call returns. On return, it will have modified the entries in the array which have actually changed, and it returns the number of entries that have been changed. If the timout was reached, and no decsriptor changed, zero is returned; The arrays of indexes are undefined after that. On error, -1 is returned.


.SH ERRORS
On error, the function returns -1, and Errors are reported in LinuxError :

.TP
.B SYS_EBADF
An invalid descriptor was specified in one of the sets.
.TP
.B SYS_EINTR
A non blocked signal was caught.
.TP
.B SYS_EINVAL
\fBN\fR is negative or too big.
.TP
.B SYS_ENOMEM
\fBSelect\fR was unable to allocate memory for its internal tables.

.SH SEE ALSO
.TP
.B SelectText
Wait for event on typed ontyped file.
.TP
.B GetFS
Return file selector
.TP
.B FD_ZERO
Clear all file descriptors in set
.TP
.B FD_Clr
Clears a filedescriptor in a set
.TP
.B FD_Set
Set a filedescriptor in a set
.TP
.B FD_IsSet
Check whether a filedescriptor is set

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBselect.html\fR on 2015-04-09, 22:02.

