.\" file autogenerated by fpman
.TH "fp-fileopen" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
FileOpen - Open an existing file and return a filehandle
.SH LOCATION
package \fBrtl\fR, unit \fBsysutils\fR, file \fBfilutilh.inc\fR, line 81
.SH SYNOPSIS
function \fBFileOpen\fR(\fBconst\fR FileName:string; Mode:Integer):THandle;
.SH DESCRIPTION
\fBFileOpen\fR opens a file with name \fBFileName\fR with mode \fBMode\fR. \fBMode\fR can be one of the following constants:

.TP
.B fmOpenRead
Open file in read-only mode
.TP
.B fmOpenWrite
Open file in write-only mode
.TP
.B fmOpenReadWrite
Open file in read/write mode.
.TP 0
Under Windows and Unix, the above mode can be or-ed with one of the following sharing/locking flags:

.TP
.B fmShareCompat
Open file in DOS share-compatibility mode
.TP
.B fmShareExclusive
Lock file for exclusive use
.TP
.B fmShareDenyWrite
Lock file so other processes can only read.
.TP
.B fmShareDenyRead
Lock file so other processes cannot read.
.TP
.B fmShareDenyNone
Do not lock file.
.TP 0
If the file has been successfully opened, it can be read from or written to (depending on the \fBMode\fR parameter) with the \fBFileRead\fR and \fBFileWrite\fR functions.

\fIRemark:\fR Remark that you cannot open a file if it doesn't exist yet, i.e. it will not be created for you. If you want tp create a new file, or overwrite an old one, use the FileCreate function.

There are some limitations to the sharing modes.


\fB1.\fR Sharing modes are only available on Unix and Windows platforms.

\fB2.\fR Unix only support sharing modes as of 2.4.0.

\fB3.\fR fmShareDenyRead only works under Windows at this time, and will always result in an error on Unix platforms because its file locking APIs do not support this concept.

\fB4.\fR File locking is advisory on Unix platforms. This means that the locks are only checked when a file is opened using a file locking mode. In other cases, existing locks are simply ignored. In particular, this means that \fBfmShareDenyNone\fR has no effect under Unix, because this can only be implemented as ``use no locking'' on those platforms. As a result, opening a file using this mode will always succeed under Unix as far as the locking is concerned, even if the file has already been opened using \fBfmShareExclusive\fR.

\fB5.\fR Under Solaris, closing a single file handle associated with a file will result in all locks on that file (even via other handles) being destroyed due to the behaviour of the underlying API (fcntl). Because of the same reason, on Solaris you cannot use \fBfmShareDenyWrite\fR in combination with \fBfmOpenWrite\fR, nor \fBfmShareExclusive\fR in combination with \fBfmOpenRead\fR although both work with fmOpenReadWrite.

For an example, see \fBFileCreate\fR


.SH ERRORS
On Error, \fBTHandle(-1)\fR is returned.


.SH SEE ALSO
.TP
.B fmOpenRead
Open file in read-only mode
.TP
.B fmOpenWrite
Open file in write-only mode
.TP
.B fmOpenReadWrite
Open file in read/write mode.
.TP
.B fmShareDenyWrite
Lock file so other processes can only read.
.TP
.B fmShareExclusive
Lock file for exclusive use
.TP
.B fmShareDenyRead
Lock file so other processes cannot read.
.TP
.B fmShareDenyNone
Do not lock file.
.TP
.B fmShareCompat
Open file in DOS share-compatibility mode
.TP
.B FileClose
Close a file handle.
.TP
.B FileWrite
Write data from a buffer to a given filehandle.
.TP
.B FileCreate
Create a new file and return a handle to it.
.TP
.B FileRead
Read data from a filehandle in a buffer.
.TP
.B FileTruncate
Truncate an open file to a given size.
.TP
.B FileSeek
Set the current file position on a file handle.

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBfileopen.html\fR on 2015-04-09, 22:06.

