.\" file autogenerated by fpman
.TH "fp-exception" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
Exception - Base class of all exceptions.
.SH LOCATION
package \fBrtl\fR, unit \fBsysutils\fR, file \fBsysutilh.inc\fR, line 104
.SH SYNOPSIS
\fBtype\fR Exception = \fBclass (TObject)\fR
.br
\fBpublic\fR
  \fBconstructor\fR Create;                 // Constructs a new exception object with a given message.
  \fBconstructor\fR CreateFmt;              // Constructs a new exception object and formats a new message.
  \fBconstructor\fR CreateRes;              // Constructs a new exception object and gets the message from a resource.
  \fBconstructor\fR CreateResFmt;           // Constructs a new exception object and formats the message from a reasource.
  \fBconstructor\fR CreateHelp;             // Constructs a new exception object and sets the help context.
  \fBconstructor\fR CreateFmtHelp;          // Constructs a new exception object and sets the help context and formats the message
  \fBconstructor\fR CreateResHelp;          // Constructs a new exception object and sets the help context and gets the message from a resource
  \fBconstructor\fR CreateResFmtHelp;       // Constructs a new exception object and sets the help context and formats the message from a resource
  \fBproperty\fR HelpContext: \fBLongInt\fR; [rw] // Help context associated with the exception.
  \fBproperty\fR Message: \fBstring\fR; [rw]      // Message associated with the exception.
.br
\fBend\fR;
.SH INHERITANCE
.TS
l l
l l.
\fBException\fR	Base class of all exceptions.
\fBTObject\fR	Base class of all classes.
.TE
.SH DESCRIPTION
\fBException\fR is the base class for all exception handling routines in the RTL and FCL. While it is possible to raise an exception with any class descending from \fBTObject\fR, it is recommended to use \fBException\fR as the basis of exception class objects: the \fBException\fR class introduces properties to associate a message and a help context with the exception being raised. What is more, the \fBSysUtils\fR unit sets the necessary hooks to catch and display unhandled exceptions: in such cases, the message displayed to the end user, will be the message stored in the exception class.


.SH SEE ALSO
.TP
.B ExceptObject
Current Exception object.
.TP
.B ExceptAddr
Current exception address.
.TP
.B ExceptionErrorMessage
Return a message describing the exception.
.TP
.B ShowException
Show the current exception to the user.
.TP
.B Abort
Abort program execution.

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBexception.html\fR on 2015-04-21, 19:28.

