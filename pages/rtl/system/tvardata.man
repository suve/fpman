.\" file autogenerated by fpman
.TH "fp-tvardata" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
tvardata - Variant record.
.SH LOCATION
package \fBrtl\fR, unit \fBSystem\fR, file \fBvarianth.inc\fR, line 96
.SH SYNOPSIS
\fBtype\fR tvardata = \fBpacked record\fR
  vtype: \fBtvartype\fR;                                          // Type of variant.
  \fBcase\fR Integer\fB of\fR


 0: \fBres1\fR;                         // Reserved byte
  \fBcase\fR  \fBcase \fRInteger\fB of\fR


 0: \fBres2\fR;             // Reserved byte
  \fBcase\fR  res3: \fBWord\fR;                                         // Reserved byte
  \fBcase\fR  \fBcase \fRWord\fB of\fR


 varsmallint: \fBvsmallint\fR; // Smallint value
  \fBcase\fR  ;
  \fBcase\fR  varinteger: \fBvinteger\fR;                               // Integer value
  \fBcase\fR  ;
  \fBcase\fR  varsingle: \fBvsingle\fR;                                 // Single value
  \fBcase\fR  ;
  \fBcase\fR  vardouble: \fBvdouble\fR;                                 // Double value
  \fBcase\fR  ;
  \fBcase\fR  vardate: \fBvdate\fR;                                     // TDateTime value
  \fBcase\fR  ;
  \fBcase\fR  varcurrency: \fBvcurrency\fR;                             // Currency value
  \fBcase\fR  ;
  \fBcase\fR  varolestr: \fBvolestr\fR;                                 // OLE string value (specially allocated widestring)
  \fBcase\fR  ;
  \fBcase\fR  vardispatch: \fBvdispatch\fR;                             // Dispatch interface value
  \fBcase\fR  ;
  \fBcase\fR  varerror: \fBverror\fR;                                   // Error value
  \fBcase\fR  ;
  \fBcase\fR  varboolean: \fBvboolean\fR;                               // Boolean value
  \fBcase\fR  ;
  \fBcase\fR  varunknown: \fBvunknown\fR;                               // IUnknown interface value
  \fBcase\fR  ;
  \fBcase\fR  varshortint: \fBvshortint\fR;                             // Shortint value
  \fBcase\fR  ;
  \fBcase\fR  varbyte: \fBvbyte\fR;                                     // Byte value
  \fBcase\fR  ;
  \fBcase\fR  varword: \fBvword\fR;                                     // Word value
  \fBcase\fR  ;
  \fBcase\fR  varlongword: \fBvlongword\fR;                             // Longword value
  \fBcase\fR  ;
  \fBcase\fR  varint64: \fBvint64\fR;                                   // Int64 value
  \fBcase\fR  ;
  \fBcase\fR  varqword: \fBvqword\fR;                                   // QWord value
  \fBcase\fR  ;
  \fBcase\fR  varword64: \fBvword64\fR;                                 // QWord value (?)
  \fBcase\fR  ;
  \fBcase\fR  varstring: \fBvstring\fR;                                 // Ansistring value
  \fBcase\fR  ;
  \fBcase\fR  varany: \fBvany\fR;                                       // Any valyue
  \fBcase\fR  ;
  \fBcase\fR  vararray: \fBvarray\fR;                                   // Variant array value
  \fBcase\fR  ;
  \fBcase\fR  varbyref: \fBvpointer\fR;                                 // Pointer value
  \fBcase\fR  ;
  \fBcase\fR  ;
  \fBcase\fR  1: \fBvlongs\fR; \fBarray\fR;                                   // Value as an array of longints
  \fBcase\fR  ;
  \fBcase\fR  ;
  \fBcase\fR  1: \fBvwords\fR; \fBarray\fR;                                   // Value as an array of words
  \fBcase\fR  ;
  \fBcase\fR  2: \fBvbytes\fR; \fBarray\fR;                                   // Value as an array of bytes
  \fBcase\fR  ;
.br
\fBend\fR;
.SH DESCRIPTION
\fBTVarData\fR is a record representation of a variant. It contains the internal structure of a variant and is handled by the various variant handling routines.


.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtvardata.html\fR on 2015-04-09, 22:04.

