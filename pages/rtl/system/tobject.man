.\" file autogenerated by fpman
.TH "fp-tobject" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TObject - Base class of all classes.
.SH LOCATION
package \fBrtl\fR, unit \fBSystem\fR, file \fBobjpash.inc\fR, line 187
.SH SYNOPSIS
\fBtype\fR TObject = \fBclass\fR
.br
\fBpublic\fR
  \fBconstructor\fR Create;                    // \fBTObject\fR Constructor
  \fBdestructor\fR Destroy; \fBvirtual\fR;           // \fBTObject\fR destructor.
  \fBclass function\fR newinstance; \fBvirtual\fR;   // Allocate memory on the heap for a new instance
  \fBprocedure\fR FreeInstance; \fBvirtual\fR;       // Clean up instance and free the memory reserved for the instance.
  \fBfunction\fR SafeCallException; \fBvirtual\fR;   // Handle exception object
  \fBprocedure\fR DefaultHandler; \fBvirtual\fR;     // Default handler for integer message handlers.
  \fBprocedure\fR Free;                        // Check for \fBNil\fR and call destructor.
  \fBclass function\fR InitInstance;           // Initialize a new class instance.
  \fBprocedure\fR CleanupInstance;             // Finalize the class instance.
  \fBclass function\fR ClassType;              // Return a "class of" pointer for the current class
  \fBclass function\fR ClassInfo;              // Return a pointer to the type information for this class.
  \fBclass function\fR ClassName;              // Return the current class name.
  \fBclass function\fR ClassNameIs;            // Check whether the class name equals the given name.
  \fBclass function\fR ClassParent;            // Return the parent class.
  \fBclass function\fR InstanceSize;           // Return the size of an instance.
  \fBclass function\fR InheritsFrom;           // Check whether class is an ancestor.
  \fBclass function\fR StringMessageTable;     // Return a pointer to the string message table.
  \fBclass function\fR MethodAddress;          // Return the address of a method
  \fBclass function\fR MethodName;             // Return the name of a method.
  \fBfunction\fR FieldAddress;                 // Return the address of a field.
  \fBprocedure\fR AfterConstruction; \fBvirtual\fR;  // Method called after the constructor was called.
  \fBprocedure\fR BeforeDestruction; \fBvirtual\fR;  // Method called before the destructor is called.
  \fBprocedure\fR DefaultHandlerStr; \fBvirtual\fR;  // Default handler for string messages.
  \fBprocedure\fR Dispatch; \fBvirtual\fR;           // Dispatch an integer message
  \fBprocedure\fR DispatchStr; \fBvirtual\fR;        // Dispatch a string message.
  \fBfunction\fR GetInterface;                 // Return a reference to an interface
  \fBfunction\fR GetInterfaceByStr;            // Return an interface based on its GUID
  \fBfunction\fR GetInterfaceWeak;             // Get a reference to an interface, not increasing the reference count
  \fBclass function\fR GetInterfaceEntry;      // Return the interface table entry by GUID
  \fBclass function\fR GetInterfaceEntryByStr; // Return the interface table entry by string
  \fBclass function\fR GetInterfaceTable;      // Return a pointer to the table of implemented interfaces for a class
  \fBclass function\fR UnitName;               // Unit name
  \fBfunction\fR Equals; \fBvirtual\fR;              // Check if two objects are equal.
  \fBfunction\fR GetHashCode; \fBvirtual\fR;         // Return a hash code for the object
  \fBfunction\fR ToString; \fBvirtual\fR;            // Return a string representation for the object
.br
\fBend\fR;
.SH DESCRIPTION
\fBTObject\fR is the parent root class for all classes in Object Pascal. If a class has no parent class explicitly declared, it is dependent on \fBTObject\fR. \fBTObject\fR introduces class methods that deal with the class' type information, and contains all necessary methods to create an instance at runtime, and to dispatch messages to the correct method (both string and integer messages).


.SH SEE ALSO
.TP
.B TClass
Class of TObject.

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtobject.html\fR on 2015-04-09, 22:05.

