.\" file autogenerated by fpman
.TH "fp-tunicodestringmanager" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TUnicodeStringManager - Unicode string manager
.SH LOCATION
package \fBrtl\fR, unit \fBSystem\fR, file \fBustringh.inc\fR, line 53
.SH SYNOPSIS
\fBtype\fR TUnicodeStringManager = \fBrecord\fR
  Wide2AnsiMoveProc: \fB\\fBprocedure\\fR\fR;                 // Callback used when a unicode/wide string must be converted to an ansistring
  source: \fBPWideChar\fR;
  \fBvar\fR dest: \fBansistring\fR;
  \fBvar\fR len: \fBSizeInt\fR;
  \fBvar\fR Ansi2WideMoveProc: \fB\\fBprocedure\\fR\fR;             // Callback used when an ansistring must be converted to a unicodestring/widestring.
  \fBvar\fR source: \fBPChar\fR;
  \fBvar\fR dest: \fBwidestring\fR;
  \fBvar\fR len: \fBSizeInt\fR;
  \fBvar\fR UpperWideStringProc: \fB\\fBfunction\\fR\fR;            // Callback used when a unicode/wide string must be uppercased.
  \fBconst\fR S: \fBWideString\fR;
  \fBconst\fR LowerWideStringProc: \fB\\fBfunction\\fR\fR;          // Callback used when a unicode/wide string must be lowercased.
  \fBconst\fR S: \fBWideString\fR;
  \fBconst\fR CompareWideStringProc: \fB\\fBfunction\\fR\fR;        // Callback used when 2 unicode/wide strings must be compared
  \fBconst\fR s1: \fBWideString\fR;
  \fBconst\fR s2: \fBWideString\fR;
  \fBconst\fR CompareTextWideStringProc: \fB\\fBfunction\\fR\fR;    // Callback used when 2 unicode/wide strings must be compared case-insensitively
  \fBconst\fR s1: \fBWideString\fR;
  \fBconst\fR s2: \fBWideString\fR;
  \fBconst\fR CharLengthPCharProc: \fB\\fBfunction\\fR\fR;          // Callback used when the character length of a unicode/wide string must be calculated
  \fBconst\fR Str: \fBPChar\fR;
  \fBconst\fR CodePointLengthProc: \fB\\fBfunction\\fR\fR;
  \fBconst\fR Str: \fBPChar\fR;
  \fBconst\fR MaxLookAead: \fBPtrInt\fR;
  \fBconst\fR UpperAnsiStringProc: \fB\\fBfunction\\fR\fR;          // Callback used when an ansistring must be uppercased.
  \fBconst\fR s: \fBansistring\fR;
  \fBconst\fR LowerAnsiStringProc: \fB\\fBfunction\\fR\fR;          // Callback used when an ansistring must be lowercased.
  \fBconst\fR s: \fBansistring\fR;
  \fBconst\fR CompareStrAnsiStringProc: \fB\\fBfunction\\fR\fR;     // Callback used when 2 ansistrings must be compared.
  \fBconst\fR S1: \fBansistring\fR;
  \fBconst\fR S2: \fBansistring\fR;
  \fBconst\fR CompareTextAnsiStringProc: \fB\\fBfunction\\fR\fR;    // Callback used when 2 ansistrings must be compared case insensitively.
  \fBconst\fR S1: \fBansistring\fR;
  \fBconst\fR S2: \fBansistring\fR;
  \fBconst\fR StrCompAnsiStringProc: \fB\\fBfunction\\fR\fR;        // Callback used when 2 ansistrings must be compared case insensitively
  \fBconst\fR S1: \fBPChar\fR;
  \fBconst\fR S2: \fBPChar\fR;
  \fBconst\fR StrICompAnsiStringProc: \fB\\fBfunction\\fR\fR;       // Callback used when 2 null-terminated ansistring arrays must be compared case insensitively
  \fBconst\fR S1: \fBPChar\fR;
  \fBconst\fR S2: \fBPChar\fR;
  \fBconst\fR StrLCompAnsiStringProc: \fB\\fBfunction\\fR\fR;       // Callback used when 2 ansistring arrays must be compared up to a given length
  \fBconst\fR S1: \fBPChar\fR;
  \fBconst\fR S2: \fBPChar\fR;
  \fBconst\fR MaxLen: \fBPtrUInt\fR;
  \fBconst\fR StrLICompAnsiStringProc: \fB\\fBfunction\\fR\fR;      // Callback used when 2 ansistring arrays must be compared case insensitively up to agiven length
  \fBconst\fR S1: \fBPChar\fR;
  \fBconst\fR S2: \fBPChar\fR;
  \fBconst\fR MaxLen: \fBPtrUInt\fR;
  \fBconst\fR StrLowerAnsiStringProc: \fB\\fBfunction\\fR\fR;       // Callback used when a null-terminated ansistring array must be lowercased.
  \fBconst\fR Str: \fBPChar\fR;
  \fBconst\fR StrUpperAnsiStringProc: \fB\\fBfunction\\fR\fR;       // Callback used when a null-terminated ansistring array must be uppercased.
  \fBconst\fR Str: \fBPChar\fR;
  \fBconst\fR ThreadInitProc: \fB\\fBprocedure\\fR\fR;              // Called whenever a new thread is started.
  \fBconst\fR ThreadFiniProc: \fB\\fBprocedure\\fR\fR;              // Called whenever a thread ends.
  \fBconst\fR Unicode2AnsiMoveProc: \fB\\fBprocedure\\fR\fR;        // Callback used whenever a unicode string must be converted to an ansistring.
  \fBconst\fR source: \fBPUnicodeChar\fR;
  \fBvar\fR dest: \fBansistring\fR;
  \fBvar\fR len: \fBSizeInt\fR;
  \fBvar\fR Ansi2UnicodeMoveProc: \fB\\fBprocedure\\fR\fR;          // Callback used whenever a ansistring must be converted to a unicode string.
  \fBvar\fR source: \fBPChar\fR;
  \fBvar\fR dest: \fBunicodestring\fR;
  \fBvar\fR len: \fBSizeInt\fR;
  \fBvar\fR UpperUnicodeStringProc: \fB\\fBfunction\\fR\fR;         // Callback used to convert a unicode string to uppercase.
  \fBconst\fR S: \fBUnicodeString\fR;
  \fBconst\fR LowerUnicodeStringProc: \fB\\fBfunction\\fR\fR;       // Callback used to convert a unicode string to lowercase.
  \fBconst\fR S: \fBUnicodeString\fR;
  \fBconst\fR CompareUnicodeStringProc: \fB\\fBfunction\\fR\fR;     // Callback used to compare 2 unicode strings.
  \fBconst\fR s1: \fBUnicodeString\fR;
  \fBconst\fR s2: \fBUnicodeString\fR;
  \fBconst\fR CompareTextUnicodeStringProc: \fB\\fBfunction\\fR\fR; // Callback used to compare 2 unicode strings case insensitively
  \fBconst\fR s1: \fBUnicodeString\fR;
  \fBconst\fR s2: \fBUnicodeString\fR;
.br
\fBend\fR;
.SH DESCRIPTION
\fBTUnicodeStringManager\fR is currently the same as the \fBTUnicodeStringManager\fR manager record. It performs the same functions: converting unicode strings to ansistrings and vice-versa, performing uppercase to lowercase transformations and comparing strings.


.SH SEE ALSO
.TP
.B TWideStringManager
Record containing the various callbacks of the widestring manager.

.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtunicodestringmanager.html\fR on 2015-04-09, 22:04.

