.\" file autogenerated by fpman
.TH "fp-tcollection" 3 "2014-03-14" "fpman" "Free Pascal Programmer's Manual"
.SH NAME
TCollection - Manage a collection of pointers of objects
.SH LOCATION
package \fBrtl\fR, unit \fBObjects\fR, file \fBobjects.pp\fR, line 395
.SH SYNOPSIS
\fBtype\fR TCollection = \fBobject (TObject)\fR
  Items: \fBPItemList\fR;            // Pointer to list of items.
  Count: \fBSw_Integer\fR;           // Current count of items
  Limit: \fBSw_Integer\fR;           // Max number of items
  Delta: \fBSw_Integer\fR;           // Number of pointers to allocate when adding items.
  \fBconstructor\fR Init;            // Instantiate a new collection.
  \fBconstructor\fR Load;            // Initialize a new collection and load collection from a stream.
  \fBdestructor\fR Done; \fBvirtual\fR;    // Clean up collection, release all memory.
  \fBfunction\fR At;                 // Return the item at a certain index.
  \fBfunction\fR IndexOf; \fBvirtual\fR;   // Find the position of a certain item.
  \fBfunction\fR GetItem; \fBvirtual\fR;   // Read one item off the stream.
  \fBfunction\fR LastThat;           // Return last item which matches a test.
  \fBfunction\fR FirstThat;          // Return first item which matches a test.
  \fBprocedure\fR Pack;              // Remove all \fB>Nil\fR pointers from the collection.
  \fBprocedure\fR FreeAll;           // Release all objects from the collection.
  \fBprocedure\fR DeleteAll;         // Delete all elements from the collection. Objects are not destroyed.
  \fBprocedure\fR Free;              // Free item from collection, calling it's destructor.
  \fBprocedure\fR Insert; \fBvirtual\fR;   // Insert a new item in the collection at the end.
  \fBprocedure\fR Delete;            // Delete an item from the collection, but does not destroy it.
  \fBprocedure\fR AtFree;            // Free an item at the indicates position, calling it's destructor.
  \fBprocedure\fR FreeItem; \fBvirtual\fR; // Destroy a non-nil item.
  \fBprocedure\fR AtDelete;          // Delete item at certain position.
  \fBprocedure\fR ForEach;           // Execute procedure for each item in the list.
  \fBprocedure\fR SetLimit; \fBvirtual\fR; // Set maximum number of elements in the collection.
  \fBprocedure\fR Error; \fBvirtual\fR;    // Set error code.
  \fBprocedure\fR AtPut;             // Set collection item, overwriting an existing value.
  \fBprocedure\fR AtInsert;          // Insert an element at a certain position in the collection.
  \fBprocedure\fR Store;             // Write collection to a stream.
  \fBprocedure\fR PutItem; \fBvirtual\fR;  // Put one item on the stream
.br
\fBend\fR;
.SH DESCRIPTION
The \fBTCollection\fR object manages a collection of pointers or objects. It also provides a series of methods to manipulate these pointers or objects.

Whether or not objects are used depends on the kind of calls you use. All kinds come in 2 flavors, one for objects, one for pointers.


.SH FPMAN
manpage autogenerated by \fIfpman\fR from \fBtcollection.html\fR on 2015-04-09, 22:01.

